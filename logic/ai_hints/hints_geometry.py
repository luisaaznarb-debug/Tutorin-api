# -*- coding: utf-8 -*-
"""
Pistas educativas para el motor de geometr√≠a (geometry_engine.py)
Tutor√≠n acompa√±a al alumno a recordar f√≥rmulas, sustituir valores y razonar el resultado.
"""

from logic.ai_hints.hints_utils import format_hint_message


def get_hint(hint_type: str, errors: int = 0) -> str:
    """
    Devuelve una pista seg√∫n el tipo de paso y el n√∫mero de errores.
    hint_type ‚Üí valores esperados del motor:
      - geo_formula
      - geo_substitute
      - geo_calc
      - geo_result
    """
    hints = {
        # Paso 0: recordar la f√≥rmula
        "geo_formula": [
            "Piensa qu√© figura geom√©trica est√°s trabajando. Cada una tiene su f√≥rmula propia.",
            "Por ejemplo: cuadrado ‚Üí lado √ó lado, tri√°ngulo ‚Üí base √ó altura √∑ 2.",
            "Si dudas, imagina dibujar la figura y recuerda cu√°ntos lados o dimensiones tiene.",
        ],

        # Paso 1: sustituir valores
        "geo_substitute": [
            "Sustituye los valores que aparecen en el problema dentro de la f√≥rmula.",
            "Por ejemplo: si base = 8 y altura = 5, entonces √°rea = 8 √ó 5 √∑ 2.",
            "Ten cuidado con el orden: primero base, luego altura o radio seg√∫n la figura.",
        ],

        # Paso 2: realizar el c√°lculo num√©rico
        "geo_calc": [
            "Multiplica o divide los n√∫meros seg√∫n la f√≥rmula. Hazlo paso a paso.",
            "Recuerda usar el orden correcto de operaciones: multiplicaciones antes que sumas.",
            "Redondea el resultado si tiene muchos decimales. üòä",
        ],

        # Paso 3: interpretar el resultado final
        "geo_result": [
            "Piensa qu√© representa el n√∫mero: si es √°rea, son unidades cuadradas (cm¬≤, m¬≤...).",
            "Si es per√≠metro, representa la longitud del borde (cm, m...).",
            "Revisa si el n√∫mero tiene sentido con el tama√±o de la figura. ¬°Buen trabajo!",
        ],
    }

    if hint_type not in hints:
        return format_hint_message(
            "No tengo una pista espec√≠fica para este paso, pero recuerda: identifica la figura, usa la f√≥rmula y calcula con calma. üìê"
        )

    selected = hints[hint_type]
    index = min(errors, len(selected) - 1)
    return format_hint_message(selected[index])
