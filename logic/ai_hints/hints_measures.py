# -*- coding: utf-8 -*-
"""
Pistas para el motor de medidas y unidades (measures_engine.py)
Tutor√≠n ayuda paso a paso a comprender la relaci√≥n entre unidades del SI.
"""

from logic.ai_hints.hints_utils import format_hint_message


def get_hint(hint_type: str, errors: int = 0) -> str:
    """
    Devuelve una pista educativa seg√∫n el tipo de paso y n√∫mero de errores.
    hint_type ‚Üí valores esperados del motor:
      - meas_estimate
      - meas_factor
      - meas_calc
      - meas_result
    """
    hints = {
        # Paso 0: Estimar si el n√∫mero aumenta o disminuye
        "meas_estimate": [
            "Piensa si la unidad nueva es <b>m√°s peque√±a o m√°s grande</b>.",
            "Si pasas de kil√≥metros a metros, hay <b>m√°s</b> unidades, as√≠ que el n√∫mero ser√° <b>mayor</b>.",
            "Si pasas de metros a kil√≥metros, hay <b>menos</b> unidades, as√≠ que el n√∫mero ser√° <b>menor</b>.",
        ],

        # Paso 1: Recordar el factor de conversi√≥n
        "meas_factor": [
            "Cada salto en la tabla de unidades multiplica o divide por 10, 100 o 1000.",
            "Por ejemplo: 1 km = 1000 m, 1 m = 100 cm, 1 l = 1000 ml.",
            "Busca el factor en la tabla: km ‚Üí m (√ó1000), m ‚Üí km (√∑1000).",
        ],

        # Paso 2: Realizar el c√°lculo
        "meas_calc": [
            "Multiplica o divide seg√∫n la direcci√≥n del cambio.",
            "Si cambias a una unidad m√°s peque√±a, multiplica; si es m√°s grande, divide.",
            "Ejemplo: 3 km ‚Üí m ‚Üí 3 √ó 1000 = 3000 m.",
        ],

        # Paso 3: Interpretar el resultado final
        "meas_result": [
            "Revisa si el resultado tiene sentido: ¬øes l√≥gico que aumente o disminuya?",
            "Por ejemplo: 2500 ml son 2.5 litros (m√°s grande la unidad ‚Üí n√∫mero m√°s peque√±o).",
            "¬°Muy bien! Ya dominas las equivalencias entre unidades.",
        ],
    }

    if hint_type not in hints:
        return format_hint_message(
            "No tengo una pista espec√≠fica para este paso, pero recuerda usar la tabla de unidades para orientarte. üìè"
        )

    selected = hints[hint_type]
    index = min(errors, len(selected) - 1)
    return format_hint_message(selected[index])
